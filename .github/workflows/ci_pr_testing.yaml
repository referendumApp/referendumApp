name: Continuous Integration PR Tests

on:
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.value }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node Environment
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Generate Cache Keys
        id: cache-key
        run: |
          echo "primary=${{ runner.os }}-build-${{ github.ref }}-${{ hashFiles('**/yarn.lock') }}" >> $GITHUB_OUTPUT
          echo "restore=${{ runner.os }}-build-${{ github.ref }}" >> $GITHUB_OUTPUT

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Run Prebuild
        run: npx expo prebuild --clean

      - name: Cache dependencies
        uses: actions/cache/save@v3
        with:
          path: |
            node_modules
            ios/Pods
            android/.gradle
            android/app/build
            android/build
          key: ${{ steps.cache-key.outputs.primary }}

  client_tests:
    needs: setup
    name: Client Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node Environment
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Restore Build Artifacts
        uses: actions/cache/restore@v3
        with:
          path: |
            node_modules
          key: ${{ steps.cache-key.outputs.primary }}
          restore-keys: |
            ${{ steps.cache-key.outputs.restore }}

      - name: Run Linter
        run: yarn lint

      - name: Run Typecheck
        run: yarn type-check

      - name: Run Tests
        run: yarn test

  build_ios:
    needs: setup
    name: Build IOS Client
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node Environment
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Setup Ruby and install Cocoapods
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest

      - name: Restore build artifacts
        uses: actions/cache/restore@v3
        with:
          path: |
            node_modules
            ios/Pods
          key: ${{ steps.cache-key.outputs.primary }}
          restore-keys: |
            ${{ steps.cache-key.outputs.restore }}

      - name: Install Pods
        run: |
          cd ios
          pod install
          
      - name: Build iOS
        run: yarn eas build --platform ios --local --non-interactive

  build_android:
    needs: setup
    name: Build Android Client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node Environment
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - uses: android-actions/setup-android@v2

      - name: Restore build artifacts
        uses: actions/cache/restore@v3
        with:
          path: |
            node_modules
            android/.gradle
            android/app/build
            android/build
          key: ${{ steps.cache-key.outputs.primary }}
          restore-keys: |
            ${{ steps.cache-key.outputs.restore }}

      - name: Build Client
        run: eas build --platform android--local --non-interactive
        env:
          GRADLE_OPTS: >-
            -Dorg.gradle.daemon=false
            -Dorg.gradle.parallel=true
            -Dorg.gradle.workers.max=2
            -Dorg.gradle.caching=true
